user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format json-log '{'
                          '"body_bytes_sent":"$body_bytes_sent",'
                          '"bytes_sent":"$bytes_sent",'
                          '"connection":"$connection",'
                          '"host":"$host",'
                          '"hostname":"$hostname",'
                          '"http_cookie":"$http_cookie"'
                          '"http_dnt":"$http_dnt",'
                          '"http_referer":"$http_referer",'
                          '"http_user_agent":"$http_user_agent",'
                          '"http_x_forwarded_for":"$http_x_forwarded_for",'
                          '"msec":"$msec",'
                          '"query_string":"$query_string",'
                          '"remote_addr":"$remote_addr",'
                          '"request":"$request",'
                          '"request_method":"$request_method",'
                          '"request_time":"$request_time",'
                          '"request_uri":"$request_uri",'
                          '"server_addr":"$server_addr",'
                          '"server_name":"$server_name",'
                          '"server_port":"$server_port",'
                          '"server_protocol":"$server_protocol",'
                          '"status":"$status",'
                          '"time_iso8601":"$time_iso8601",'
                          '"uri":"$uri",'
                          '}';

    access_log  /var/log/nginx/access.log  json-log;

    sendfile        on;

    keepalive_timeout  65;

    {{range lsdir "/sites"}}
        {{$site := base (.)}}
        {{$hosts := printf "/sites/%s/*" (.)}}

        upstream {{replace $site "." "_" -1}} {
            
            {{range gets $hosts}}
                server {{.Value}};
            {{else}}
                # Don't let nginx fail to reload if upstream servers aren't present 
                server localhost:4444;
            {{end}}
        }

        server {
            listen 80;
            server_name *.{{$site}} {{$site}};

            location / {
                proxy_redirect      off;
                proxy_set_header    X-Real-IP $remote_addr;
                proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header    X-Forwarded-Proto $scheme;
                proxy_set_header    Host $http_host;
                proxy_set_header    Connection "";
                proxy_http_version  1.1;
                proxy_cache_key     sfs$request_uri$scheme;
                proxy_pass          http://{{replace $site "." "_" -1}};
            }
        }
    {{end}}

    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }

    server {
        listen 443 default_server;
        server_name _;
        return 444;
    }
}
